openapi: '3.0.2'
info:
  title: go-docker
  version: '1.0'
servers:
  - url: https://localhost:3000/api
tags:
  - name : Blog 
  - name : Auth
components:
  securitySchemes:
    bearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT  
paths:
  /blogs:
    get:
      tags: 
        - Blog
      responses:
        '200':
          description: Succes to get all blogs
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    default: 200
                  status:
                    type: string
                    default: OK
                  data:
                    type: array
                    items:
                      $ref: './schemas/blog_list_schema.yaml'
    post:
      tags: 
        - Blog
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: './schemas/blog_request_schema.yaml'
      responses:
        '200':
          description: Success to create a blog
          content:
            application/json:
              schema:
                type: object
                $ref: './schemas/blog_response_schema.yaml'
  /blogs/{id}:
    parameters:
      - in: path
        name: id
        description: Id of a blog
        schema:
          type: integer
          minimum: 1
        required: true
    get:
      tags:
        - Blog
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success to get a blog by id
          content:
            application/json:
              schema:
                type: object
                $ref: './schemas/blog_response_schema.yaml'
    put:
      tags:
        - Blog
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: './schemas/blog_request_schema.yaml'
      responses:
        '200':
          description: Success to update a blog
          content:
            application/json:
              schema:
                type: object
                $ref: './schemas/blog_response_schema.yaml'
    delete:
      tags:
        - Blog
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success to delete a blog
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    default: 200
                  status: 
                    type: integer
                    default: OK
                  data:
                    type: object
  /auth/register:
    post:
      tags:
        - "Auth"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name: 
                  type: string
                email:
                  type: string
                password:
                  type: string
                role_id:
                  type: integer
                  minimum: 2
      responses:
        '200':
          description: Success creating a user
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    default: 200
                  status:
                    type: string
                    default: OK
                  data:
                    type: object
  /auth/login:
    post:
      tags:
        - "Auth"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                role_id:
                  type: integer
                  minimum: 1
      responses:
        '200':
          description: Success logged in as a registered user
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    default: 200
                  status:
                    type: string
                    default: OK
                  data:
                    type: object
                    properties:
                      access_token: 
                        type: string
                      refresh_token:
                        type: string
  /auth/refresh:
    post:
      tags:
        - "Auth"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token: 
                  type: string
                refresh_token:
                  type: string
      responses:
        '200':
          description: Success getting a new access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    default: 200
                  status:
                    type: string
                    default: OK
                  data:
                    type: object
                    properties:
                      access_token: 
                        type: string
                  
                

